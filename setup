#!/usr/bin/env bash
set -euo pipefail

IFS=
# http://stackoverflow.com/a/246128/6554
SOURCE="${BASH_SOURCE[0]}"
# resolve $SOURCE until the file is no longer a symlink
while [ -h "$SOURCE" ]; do
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  # if $SOURCE was a relative symlink, we need to resolve it relative to the
  # path where the symlink file was located
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

IFS=$'\n\t'

# BASEDIR - directory containing dotfiles content source
if [[ -z "${BASEDIR-}" ]]; then
  BASEDIR=$DIR
fi

# HOMEDIR - directory that will receive dotfiles
if [[ -z "${HOMEDIR-}" ]]; then
  HOMEDIR=~/
fi

# OLDDIR - directory that will receive old dotfiles in HOMEDIR
OLDDIR=.old$(date +%s)
DOTFILES=("${HOMEDIR}/.profile" \
"${HOMEDIR}/.bash_profile" \
"${HOMEDIR}/.zshrc" \
"${HOMEDIR}/.zsh" \
"${HOMEDIR}/.zsh-git-prompt" \
"${HOMEDIR}/.vimrc" \
"${HOMEDIR}/.vim" \
"${HOMEDIR}/.tmux.conf" \
"${HOMEDIR}/.tmux" \
"${HOMEDIR}/.oh-my-git" \
"${HOMEDIR}/.antigen" \
"${HOMEDIR}/.spacemacs")

# remove the old files
mkdir -p "${OLDDIR}"
for file in "${DOTFILES[@]}"
do
	# we don't care if this fails, hence the || true
	mv "${file}" "${OLDDIR}" > /dev/null 2>&1 || true
done

# profile is a copy, not a symlink
ln -s "${BASEDIR}/shell/profile" ${HOMEDIR}/.profile

# bash
ln -s "${BASEDIR}/shell/bash_profile" ${HOMEDIR}/.bash_profile

# zsh
ln -s "${BASEDIR}/shell/zshrc" ${HOMEDIR}/.zshrc

# vim
ln -s "${BASEDIR}/vim/vimrc" ${HOMEDIR}/.vimrc

# emacs
ln -s "${BASEDIR}/emacs/spacemacs" ${HOMEDIR}/.spacemacs

# tmux
ln -s "${BASEDIR}/tmux/tmux.conf" ${HOMEDIR}/.tmux.conf
if [[ -z "$(uname | grep Darwin || true)" ]]; then
    # non-Mac, assume Linux
    ln -s "${BASEDIR}/tmux/tmux.linux.conf" ${HOMEDIR}/.tmux.linux.conf
else
    ln -s "${BASEDIR}/tmux/tmux.macosx.conf" ${HOMEDIR}/.tmux.macosx.conf
fi
