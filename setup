#!/usr/bin/env bash
if [[ -n "${DEBUG:-}" ]]; then
  set -x
fi

set -euo pipefail

IFS=
# http://stackoverflow.com/a/246128/6554
SOURCE="${BASH_SOURCE[0]}"
# resolve $SOURCE until the file is no longer a symlink
while [ -h "$SOURCE" ]; do
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  # if $SOURCE was a relative symlink, we need to resolve it relative to the
  # path where the symlink file was located
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

IFS=$'\n\t'

# BASEDIR - directory containing dotfiles content source
if [[ -z "${BASEDIR-}" ]]; then
  BASEDIR=$DIR
fi

# HOMEDIR - directory that will receive dotfiles
if [[ -z "${HOMEDIR-}" ]]; then
  HOMEDIR=~/
fi

# OLDDIR - directory that will receive old dotfiles in HOMEDIR
OLDDIR=.old$(date +%s)
DOTFILES=("${HOMEDIR}/.profile" \
"${HOMEDIR}/.bash_profile" \
"${HOMEDIR}/.vimrc" \
"${HOMEDIR}/.vim" \
"${HOMEDIR}/.tmux.conf" \
"${HOMEDIR}/.tmux" \
)

# remove the old files
mkdir -p "${OLDDIR}"
for file in "${DOTFILES[@]}"
do
	# we don't care if this fails, hence the || true
	mv "${file}" "${OLDDIR}" > /dev/null 2>&1 || true
done

# profile
mkdir -p "${HOMEDIR}/.profile.d"
ln -sf "${BASEDIR}/shell/profile" "${HOMEDIR}/.profile"

# bash
ln -sf "${BASEDIR}/shell/git-prompt.sh" "${HOMEDIR}/.git-prompt.sh"
ln -sf "${BASEDIR}/shell/bashrc" "${HOMEDIR}/.bashrc"
ln -sf "${BASEDIR}/shell/bash_profile" "${HOMEDIR}/.bash_profile"
ln -sf "${BASEDIR}/shell/bash_aliases" "${HOMEDIR}/.bash_aliases"

# vim
ln -sf "${BASEDIR}/vim/vimrc" "${HOMEDIR}/.vimrc"

# tmux
ln -sf "${BASEDIR}/tmux/tmux.conf" "${HOMEDIR}/.tmux.conf"

# os-specific
if [[ -z "$(uname | grep Darwin || true)" ]]; then
    # non-Mac, assume Linux
    ln -sf "${BASEDIR}/shell/profile_linux" "${HOMEDIR}/.profile.d/profile_linux"
    
    # install-updates
    mkdir -p "${HOMEDIR}/bin/"
    ln -sf "${BASEDIR}/install-updates.sh" "${HOMEDIR}/bin/install-updates.sh"
#else
    # Mac
fi
